package views

import "fmt"

// ImageMetadata represents metadata for a gallery image
type ImageMetadata struct {
	Filename    string
	Width       int
	Height      int
	AspectRatio float64
	GridRowSpan int
}

templ GalleryPage(images []ImageMetadata) {
	<div class="min-h-screen bg-white">
		// Header
		<header class="bg-pattern-subtle py-16">
			<div class="max-w-7xl mx-auto px-6">
				<div class="text-center">
					<h1 class="script text-6xl md:text-8xl text-blue-300 font-extralight mb-4">Our Gallery</h1>
					<p class="text-gray-600 text-lg">Engagement Photos ({ fmt.Sprintf("%d", len(images)) } photos)</p>
					<div class="mt-8">
						<a href="/" class="text-blue-300 hover:text-blue-400 transition-colors underline">‚Üê Back to Home</a>
					</div>
				</div>
			</div>
		</header>
		// Gallery Grid - Masonry Layout
		<div class="max-w-7xl mx-auto px-6 py-16">
			<div id="gallery-masonry" class="gallery-masonry">
				// Iterate over actual images from metadata
				for i, image := range images {
					<div class="gallery-item group relative overflow-hidden rounded-lg shadow-md hover:shadow-2xl transition-all duration-500 opacity-0 gallery-item-animate cursor-pointer" data-index={ fmt.Sprintf("%d", i) } role="button" tabindex="0" aria-label={ fmt.Sprintf("View photo %d in full size", i+1) }>
						<picture>
							// AVIF sources (smallest, best compression)
							<source
								type="image/avif"
								srcset={
									fmt.Sprintf("/static/%s-640w.avif 640w, /static/%s-768w.avif 768w, /static/%s-1024w.avif 1024w",
										image.Filename[:len(image.Filename)-4],
										image.Filename[:len(image.Filename)-4],
										image.Filename[:len(image.Filename)-4])
								}
								sizes="(max-width: 640px) 100vw, (max-width: 1024px) 50vw, 33vw"
							/>
							// WebP sources (good compression, wide support)
							<source
								type="image/webp"
								srcset={
									fmt.Sprintf("/static/%s-640w.webp 640w, /static/%s-768w.webp 768w, /static/%s-1024w.webp 1024w",
										image.Filename[:len(image.Filename)-4],
										image.Filename[:len(image.Filename)-4],
										image.Filename[:len(image.Filename)-4])
								}
								sizes="(max-width: 640px) 100vw, (max-width: 1024px) 50vw, 33vw"
							/>
							// JPEG fallback with LQIP
							<img
								src={ fmt.Sprintf("/static/%s-lqip.jpg", image.Filename[:len(image.Filename)-4]) }
								data-src={ fmt.Sprintf("/static/%s-1024w.jpg", image.Filename[:len(image.Filename)-4]) }
								srcset={
									fmt.Sprintf("/static/%s-640w.jpg 640w, /static/%s-768w.jpg 768w, /static/%s-1024w.jpg 1024w",
										image.Filename[:len(image.Filename)-4],
										image.Filename[:len(image.Filename)-4],
										image.Filename[:len(image.Filename)-4])
								}
								sizes="(max-width: 640px) 100vw, (max-width: 1024px) 50vw, 33vw"
								alt={ fmt.Sprintf("Engagement photo %d", i+1) }
								width={ fmt.Sprintf("%d", image.Width) }
								height={ fmt.Sprintf("%d", image.Height) }
								class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-110 responsive-image"
								loading="lazy"
							/>
						</picture>
						<div class="gallery-overlay absolute inset-0 bg-gradient-to-t from-black/70 via-black/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-500 flex items-end justify-center pb-6">
						</div>
					</div>
				}
			</div>
		</div>
		// Back to top button
		<div class="text-center pb-16">
			<button
				onclick="window.scrollTo({top: 0, behavior: 'smooth'})"
				class="inline-flex items-center gap-2 px-6 py-3 bg-blue-300 text-white rounded-full hover:bg-blue-400 transition-colors shadow-lg hover:shadow-xl"
			>
				<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" class="w-5 h-5">
					<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 10l7-7m0 0l7 7m-7-7v18"/>
				</svg>
				Back to Top
			</button>
		</div>
		// Gallery JavaScript (ES module - gallery.js imports lightbox.js)
		<script type="module" src="/static/js/gallery.js?v=3"></script>
	</div>
}
